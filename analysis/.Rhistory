tidyboot_mean(column = response) %>%
ungroup() %>%
ggplot(aes(x = syntax, y = mean, fill = NP)) +
geom_col(position = position_dodge()) +
facet_grid(~context)
# simulate inference data
data_infer_240 <- tibble(
syntax = rep(c("subject", "predicate"), each = nr_si1*nr_items),
NP = rep(c("basic", "sub", "one"), nr_si1*4),
context = rep(c("basic", "sub"), nr_si1*nr_items),
Subject = rep(1:(nr_si1*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_si1*2),
Subject_rand = rep(rnorm(2*nr_si1, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_si1), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_si1, p=0.8),
rbernoulli(nr_si1*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_si1, p=0.65),
rbernoulli(nr_si1, p=0.92)),
rbernoulli(nr_si1*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
data_infer_240 %>%
group_by(syntax, NP, context) %>%
tidyboot_mean(column = response) %>%
ungroup() %>%
ggplot(aes(x = syntax, y = mean, fill = NP)) +
geom_col(position = position_dodge()) +
facet_grid(~context)
# simulate inference data
data_infer_240 <- tibble(
syntax = rep(c("subject", "predicate"), each = nr_si1*nr_items),
NP = rep(c("basic", "sub", "one"), nr_si1*4),
context = rep(c("basic", "sub"), nr_si1*nr_items),
Subject = rep(1:(nr_si1*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_si1*2),
Subject_rand = rep(rnorm(2*nr_si1, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_si1), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_si1, p=0.8),
rbernoulli(nr_si1*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_si1, p=0.7),
rbernoulli(nr_si1, p=0.92)),
rbernoulli(nr_si1*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
data_infer_240 %>%
group_by(syntax, NP, context) %>%
tidyboot_mean(column = response) %>%
ungroup() %>%
ggplot(aes(x = syntax, y = mean, fill = NP)) +
geom_col(position = position_dodge()) +
facet_grid(~context)
contrasts(data_infer_240$syntax) = matrix(c(-1,1))
contrasts(data_infer_240$context) = matrix(c(-1,1))
contrasts(data_infer_240$NP) = matrix(c(-1/3, -1/3, 2/3, -1/3, -1/3, 2/3), nrow=3)
# minimal model
fit_data_infer_240_min <- glmer( response ~ syntax*NP*context + (0 + syntax:NP || Subject),
data=data_infer_240,
family="binomial",
REML = F,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5))
)
summary(fit_data_infer_240_min)
nr_si1=300
# simulate inference data
data_infer_300 <- tibble(
syntax = rep(c("subject", "predicate"), each = nr_si1*nr_items),
NP = rep(c("basic", "sub", "one"), nr_si1*4),
context = rep(c("basic", "sub"), nr_si1*nr_items),
Subject = rep(1:(nr_si1*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_si1*2),
Subject_rand = rep(rnorm(2*nr_si1, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_si1), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_si1, p=0.8),
rbernoulli(nr_si1*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_si1, p=0.7),
rbernoulli(nr_si1, p=0.92)),
rbernoulli(nr_si1*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
data_infer_240 %>%
group_by(syntax, NP, context) %>%
tidyboot_mean(column = response) %>%
ungroup() %>%
ggplot(aes(x = syntax, y = mean, fill = NP)) +
geom_col(position = position_dodge()) +
facet_grid(~context)
contrasts(data_infer_300$syntax) = matrix(c(-1,1))
contrasts(data_infer_300$context) = matrix(c(-1,1))
contrasts(data_infer_300$NP) = matrix(c(-1/3, -1/3, 2/3, -1/3, -1/3, 2/3), nrow=3)
# minimal model
fit_data_infer_300_min <- glmer( response ~ syntax*NP*context + (0 + syntax:NP || Subject_rand),
data=data_infer_300,
family="binomial",
REML = F,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5))
)
data_infer_240 %>%
group_by(syntax, NP, context) %>%
tidyboot_mean(column = response) %>%
ungroup() %>%
ggplot(aes(x = syntax, y = mean, fill = NP)) +
geom_col(position = position_dodge()) +
facet_grid(~context)
data_infer_300 %>%
group_by(syntax, NP, context) %>%
tidyboot_mean(column = response) %>%
ungroup() %>%
ggplot(aes(x = syntax, y = mean, fill = NP)) +
geom_col(position = position_dodge()) +
facet_grid(~context)
fit_data_infer_300_min <- glmer( response ~ syntax*NP*context + (0 + syntax:NP || Subject_rand),
data=data_infer_300,
family="binomial",
REML = F,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5))
)
data_infer_300 <- tibble(
syntax = rep(c("subject", "predicate"), each = nr_si1*nr_items),
NP = rep(c("basic", "sub", "one"), nr_si1*4),
context = rep(c("basic", "sub"), nr_si1*nr_items),
Subject = rep(1:(nr_si1*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_si1*2),
Subject_rand = rep(rnorm(2*nr_si1, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_si1), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_si1, p=0.8),
rbernoulli(nr_si1*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_si1, p=0.7),
rbernoulli(nr_si1, p=0.92)),
rbernoulli(nr_si1*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
#contrasts(data_infer_300$syntax) = matrix(c(-1,1))
#contrasts(data_infer_300$context) = matrix(c(-1,1))
#contrasts(data_infer_300$NP) = matrix(c(-1/3, -1/3, 2/3, -1/3, -1/3, 2/3), nrow=3)
# minimal model
fit_data_infer_300_min <- glmer( response ~ syntax*NP*context + (0 + syntax:NP || Subject_rand),
data=data_infer_300,
family="binomial",
REML = F,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5))
)
summary(fit_data_infer_300_min)
nr_sim = 1000
sim_infer_and_fit <- function(seed, nr_s) {
nr_items = 6
set.seed(seed)
di <-  tibble(
syntax = rep(c("subject", "predicate"), each = nr_s*nr_items),
NP = rep(c("basic", "sub", "one"), nr_s*4),
context = rep(c("basic", "sub"), nr_s*nr_items),
Subject = rep(1:(nr_s*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_s*2),
Subject_rand = rep(rnorm(2*nr_s, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_s), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_s, p=0.8),
rbernoulli(nr_s*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_s, p=0.7),
rbernoulli(nr_s, p=0.92)),
rbernoulli(nr_s*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
#contrasts(di$syntax) = matrix(c(-1,1))
#contrasts(di$context) = matrix(c(-1,1))
#contrasts(di$NP) = matrix(c(-1/3, -1/3, 2/3, -1/3, -1/3, 2/3), nrow=3)
update(fit_data_infer_300_min,
newdata = di,
seed = seed) %>%
tidy(prob = .95)
}
s_infer300 <-
tibble(seed = 1:nr_sim) %>%
mutate(tidy = map(seed, sim_infer_and_fit, n = 300)) %>%
unnest(tidy)
head(s_infer300)
nr_si0=240
# simulate inference data
data_infer_240 <- tibble(
syntax = rep(c("subject", "predicate"), each = nr_si0*nr_items),
NP = rep(c("basic", "sub", "one"), nr_si0*4),
context = rep(c("basic", "sub"), nr_si0*nr_items),
Subject = rep(1:(nr_si0*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_si0*2),
Subject_rand = rep(rnorm(2*nr_si0, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_s01), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_si0, p=0.8),
rbernoulli(nr_si0*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_si0, p=0.7),
rbernoulli(nr_si0, p=0.92)),
rbernoulli(nr_s01*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
# simulate inference data
data_infer_240 <- tibble(
syntax = rep(c("subject", "predicate"), each = nr_si0*nr_items),
NP = rep(c("basic", "sub", "one"), nr_si0*4),
context = rep(c("basic", "sub"), nr_si0*nr_items),
Subject = rep(1:(nr_si0*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_si0*2),
Subject_rand = rep(rnorm(2*nr_si0, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_s01), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_si0, p=0.8),
rbernoulli(nr_si0*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_si0, p=0.7),
rbernoulli(nr_si0, p=0.92)),
rbernoulli(nr_si1*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
# simulate inference data
data_infer_240 <- tibble(
syntax = rep(c("subject", "predicate"), each = nr_si0*nr_items),
NP = rep(c("basic", "sub", "one"), nr_si0*4),
context = rep(c("basic", "sub"), nr_si0*nr_items),
Subject = rep(1:(nr_si0*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_si0*2),
Subject_rand = rep(rnorm(2*nr_si0, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_si0), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_si0, p=0.8),
rbernoulli(nr_si0*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_si0, p=0.7),
rbernoulli(nr_si0, p=0.92)),
rbernoulli(nr_si0*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
fit_data_infer_240_min <- glmer( response ~ syntax*NP*context + (0 + syntax:NP || Subject_rand),
data=data_infer_240,
family="binomial",
REML = F,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5))
)
summary(fit_data_infer_240_min)
nr_sim = 1000
sim_infer_and_fit <- function(seed, nr_s) {
nr_items = 6
set.seed(seed)
di <-  tibble(
syntax = rep(c("subject", "predicate"), each = nr_s*nr_items),
NP = rep(c("basic", "sub", "one"), nr_s*4),
context = rep(c("basic", "sub"), nr_s*nr_items),
Subject = rep(1:(nr_s*2), each = nr_items),
Item = rep(LETTERS[1:6], nr_s*2),
Subject_rand = rep(rnorm(2*nr_s, 3, 2), each=nr_items),
Item_rand = rep(rep(rnorm(nr_items, 0, 1), each=nr_s), 2)
) %>%
mutate( syntax = factor(syntax, levels = c("subject", "predicate")),
NP = factor(NP, levels = c("basic", "sub", "one")),
context = factor(context, levels = c("basic", "sub")),
resp_cat = ifelse( context == "sub",
ifelse( NP == "basic",
rbernoulli(nr_s, p=0.8),
rbernoulli(nr_s*2, p=0.5)),
ifelse( NP == "sub",
ifelse( syntax == "predicate",
rbernoulli(nr_s, p=0.7),
rbernoulli(nr_s, p=0.92)),
rbernoulli(nr_s*2, p=0.92)))
) %>% rowwise() %>%
mutate(response = ifelse( resp_cat == T, 1, 0) )
#contrasts(di$syntax) = matrix(c(-1,1))
#contrasts(di$context) = matrix(c(-1,1))
#contrasts(di$NP) = matrix(c(-1/3, -1/3, 2/3, -1/3, -1/3, 2/3), nrow=3)
update(fit_data_infer_240_min,
newdata = di,
seed = seed) %>%
tidy(prob = .95)
}
s_infer240 <-
tibble(seed = 1:nr_sim) %>%
mutate(tidy = map(seed, sim_infer_and_fit, n = 240)) %>%
unnest(tidy)
# Load libraries.
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
library(tidyverse)
library(jsonlite)
library(tidyboot)
library(tidytext)
library(lme4)
library(ggthemes)
library(forcats)
library(brms)
library(stringr)
theme_set(theme_few())
df.adj <- read_csv('../data/pilot-adj-endorsement-1/pilot-adj-endorsement-1-trials-tidy.csv')
knitr::opts_chunk$set(echo = TRUE)
d_infer <- rbind( read_csv('../data/results_17_inf-pred-sub.csv'),
read_csv('../data/results_20_inf-prenom-sub.csv'))
library(tidyverse)
library(tidyboot)
library(lmerTest)
d_infer <- rbind( read_csv('../data/results_17_inf-pred-sub.csv'),
read_csv('../data/results_20_inf-prenom-sub.csv'))
setwd("~/Internship/comp-class-inference/analysis")
d_infer <- rbind( read_csv('../data/results_17_inf-pred-sub.csv'),
read_csv('../data/results_20_inf-prenom-sub.csv'))
d_infer <- rbind( read_csv('../data/results_17_inf-pred-sub_clean.csv'),
read_csv('../data/results_20_inf-prenom-sub_clean.csv'))
d_infer_main <- d_infer %>% mutate(context = factor(pic_spec, levels = c(0, 1),
labels = c("basic-level parade",
"subordinate parade"))) %>%
filter(grepl("en", languages, ignore.case = T)) %>%
filter((trial_name == "custom_main_text1")|
(trial_name == "custom_main_text2")) %>%
select(submission_id, trial_number, ref_spec, context, item, response, condition,
context_picture, target_size)
d_infer_main_responseCat <- d_infer_main %>%
rowwise() %>%
mutate(
response_cat =
ifelse(
tolower(response) %in% c("birds", "dogs", "fish", "flowers",
"flower", "trees","tree", "smaller dogs",
"fishes", "dog", "Fish"), "basic", "sub"),
response_num = ifelse(response_cat == "sub", 0, 1),
response_label = "basic"
)
View(d_infer_main_responseCat)
write_csv(d_infer_main_responseCat, '../data/categorizedResps_full.csv')
setwd("~/Internship/comp-class-context-manipulation/analysis")
knitr::opts_chunk$set(echo = TRUE)
df.full_context <- read_csv('../data/categorizedResps_full.csv')
df <- rbind( read_csv('../data/results_24_ref-utility-5-6-prenom.csv'),
read_csv('../data/results_23_ref-utility-5-6-pred.csv') )
names(df)
df.clean <- df %>% select(context_picture, experiment_id, problems, item, pic_spec, text, condition, target, response, comments, ref-spec, target_size, languages, context, trial_number, attempts, adj_cond, trial_name, utterance)
df.clean <- df %>% select(context_picture, experiment_id, problems, item, pic_spec, text, condition, target, response, comments, ref_spec, target_size, languages, context, trial_number, attempts, adj_cond, trial_name, utterance)
df.clean <- df %>% select(context_picture, experiment_id, problems, item, pic_spec, text, condition, target, response, comments, ref_spec, target_size, languages, context, trial_number, attempts, adj_cond, trial_name, utterance) %>%
filter(grepl("en", languages, ignore.case = T))
distinct(df.clean$trial_name)
unique(df.clean$trial_name)
df.main <- df.clean %>% filter((trial_name == "custom_main_text1") | (trial_name == "custom_main_text2") )
df.full_context <- rbind( read_csv('../data/results_20_inf-prenom-sub_clean.csv'),
read_csv('./data/results_17_inf-pred-sub_clean.csv'))
df.full_context <- rbind( read_csv('../data/results_20_inf-prenom-sub_clean.csv'),
read_csv('../data/results_17_inf-pred-sub_clean.csv'))
glimpse(df.full_context)
df.full_context$trial_name
glimpse(df.full_context)
names(df.full_context)
df.full.clean <- df.full_context %>% filter((trial_name == "custom_main_text1") | (trial_name == "custom_main_text2")) %>% select(submission_id, pic, experiment_id, item, trials, pic_spec, condition, response, ref_spec, target_size, trial_number, adj_cond, trial_name)
df.full.clean$ref_spec
df.main$ref_spec
df.main$pic_spec
df.full.clean$pic_spec
df.full.clean <- df.full_context %>% filter((trial_name == "custom_main_text1") | (trial_name == "custom_main_text2")) %>% select(submission_id, pic, experiment_id, item, trials, pic_spec, condition, response, ref_spec, target_size, trial_number, adj_cond, trial_name) %>%
mutate(reference = ifelse(pic_spec == 0, "two / six", "six / six"))
df.main <- df.clean %>% filter((trial_name == "custom_main_text1") | (trial_name == "custom_main_text2") ) %>% mutate(reference = "five / six")
df.joint <- rbind(df.full.clean, df.main)
df.full.clean <- df.full_context %>% filter((trial_name == "custom_main_text1") | (trial_name == "custom_main_text2")) %>% select(context_picture, experiment_id, problems, item, pic_spec, text, condition, target, response, comments, ref_spec, target_size, languages, context, trial_number, attempts, adj_cond, trial_name, utterance) %>%
mutate(reference = ifelse(pic_spec == 0, "two / six", "six / six"))
df.full.clean <- df.full_context %>% filter((trial_name == "custom_main_text1") | (trial_name == "custom_main_text2")) %>% select(context_picture, experiment_id, problems, item, pic_spec, text, condition, target = pic, response, comments, ref_spec, target_size, languages, context, trial_number, attempts, adj_cond, trial_name, utterance) %>%
mutate(reference = ifelse(pic_spec == 0, "two / six", "six / six"))
df.joint <- rbind(df.full.clean, df.main)
distinct(df.joint$response) %>% View()
uniwue(df.joint$response) %>% View()
unique(df.joint$response) %>% View()
d.main.respCat <- df.joint %>%
subset(., !(response %in% c("salmon", "roses", "perspective"))) %>%
rowwise() %>%
mutate(
response_cat = ifelse(
tolower(response) %in% c("tree", "trees", "fish", "fisg", "fishes", "dog", "dogs", "smaller dogs", "flower","flowers", "bird", "birds",
"weeds", "trees in general"), "basic", "sub"
),
response_num = ifelse(response_cat == "basic", 1, 0),
response_label = "basic"
)
bar.width = 0.8
d.main.respCat %>%
group_by(response_label, reference, condition) %>%
tidyboot_mean(column = response_num) %>% ungroup() %>%
mutate(condition = factor(condition, levels = c("prenominal",  "predicative"),
labels = c("Predicate",  "Subject"))) %>%
ggplot(aes(x=condition, y = mean, fill = condition, ymin = ci_lower, ymax = ci_upper)) +
geom_col(position = position_dodge(bar.width), width = bar.width) +
geom_linerange(position = position_dodge(bar.width)) +
xlab("NP condition") +
ylab("proportion of basic-level responses")+
facet_grid(~reference)
d.main.respCat %>%
group_by(response_label, reference, condition) %>%
tidyboot_mean(column = response_num) %>% ungroup() %>%
mutate(condition = factor(condition, levels = c("prenominal",  "predicative"),
labels = c("Predicate",  "Subject"))) %>%
ggplot(aes(x=reference, y = mean, fill = condition, ymin = ci_lower, ymax = ci_upper)) +
geom_col(position = position_dodge(bar.width), width = bar.width) +
geom_linerange(position = position_dodge(bar.width)) +
xlab("NP condition") +
ylab("proportion of basic-level responses")
d.main.respCat %>%
group_by(response_label, reference, condition) %>%
tidyboot_mean(column = response_num) %>% ungroup() %>%
mutate(condition = factor(condition, levels = c("prenominal",  "predicative"),
labels = c("Predicate",  "Subject"))) %>%
ggplot(aes(x=condition, y = mean, fill = reference, ymin = ci_lower, ymax = ci_upper)) +
geom_col(position = position_dodge(bar.width), width = bar.width) +
geom_linerange(position = position_dodge(bar.width)) +
xlab("NP condition") +
ylab("proportion of basic-level responses")
d.main.respCat %>%
group_by(response_label, reference, condition) %>%
tidyboot_mean(column = response_num) %>% ungroup() %>%
mutate(condition = factor(condition, levels = c("prenominal",  "predicative"),
labels = c("Predicate",  "Subject")),
reference = factor(reference, levels = c("two / six", "five / six", "six / six") )) %>%
ggplot(aes(x=condition, y = mean, fill = reference, ymin = ci_lower, ymax = ci_upper)) +
geom_col(position = position_dodge(bar.width), width = bar.width) +
geom_linerange(position = position_dodge(bar.width)) +
xlab("NP condition") +
ylab("proportion of basic-level responses")
d.main.respCat %>%
group_by(response_label, reference, condition) %>%
tidyboot_mean(column = response_num) %>% ungroup() %>%
mutate(condition = factor(condition, levels = c("prenominal",  "predicative"),
labels = c("Predicate",  "Subject")),
sub_distractors = factor(reference, levels = c("two / six", "five / six", "six / six") )) %>%
ggplot(aes(x=condition, y = mean, fill = sub_distractors, ymin = ci_lower, ymax = ci_upper)) +
geom_col(position = position_dodge(bar.width), width = bar.width) +
geom_linerange(position = position_dodge(bar.width)) +
xlab("NP condition") +
ylab("proportion of basic-level responses") +
ggtitle("Proportion of basic-level responses given subordinate NP in different contexts")
df.subject <- d.main.respCat %>% filter(condition == "Subject")
d.subj.fit <- glmer(response ~ reference + (1 + reference||submission_id),
data = df.subject,
family = "binomial")
glimpse(df.subject)
df.subject <- d.main.respCat %>% filter(condition == "predicative")
glimpse(df.subject)
d.subj.fit <- glmer(response_num ~ reference + (1 + reference||item),
data = df.subject,
family = "binomial")
d.subj.fit <- glmer(response_num ~ reference + (0 + reference||item),
data = df.subject,
family = "binomial")
summary(d.subj.fit)
df.prenom <- read_csv('../data/results_24_ref-utility-5-6-prenom.csv')
glimpse(df.prenom)
df.prenom %>% select(submission_id, question, response1, sentence_left, startDate, context_picture, experiment_id, picture2, correct1, question1, problems, enjoyment, item, bbotresponse correct2, pic_spec, understand, text, condition, target, age, respons,e comments, ref_spec, picture1, response3, education, target_size, languages, sex, RT, correct3, context, trial_number, startTime, attempts, question3, fairprice, question2, reponse2, adj_cond, trial_name, utterance                  ) %>% write_csv('../data/results_24_ref-utility-5-6-prenom_cleaned.csv')
df.prenom %>% select(submission_id, question, response1, sentence_left, startDate, context_picture, experiment_id, picture2, correct1, question1, problems, enjoyment, item, botresponse, correct2, pic_spec, understand, text, condition, target, age, respons,e comments, ref_spec, picture1, response3, education, target_size, languages, sex, RT, correct3, context, trial_number, startTime, attempts, question3, fairprice, question2, reponse2, adj_cond, trial_name, utterance                  ) %>% write_csv('../data/results_24_ref-utility-5-6-prenom_cleaned.csv')
df.prenom %>% select(submission_id, question, response1, sentence_left, startDate, context_picture, experiment_id, picture2, correct1, question1, problems, enjoyment, item, botresponse, correct2, pic_spec, understand, text, condition, target, age, response, comments, ref_spec, picture1, response3, education, target_size, languages, sex, RT, correct3, context, trial_number, startTime, attempts, question3, fairprice, question2, reponse2, adj_cond, trial_name, utterance ) %>% write_csv('../data/results_24_ref-utility-5-6-prenom_cleaned.csv')
df.prenom %>% select(submission_id, question, response1, sentence_left, startDate, context_picture, experiment_id, picture2, correct1, question1, problems, enjoyment, item, botresponse, correct2, pic_spec, understand, text, condition, target, age, response, comments, ref_spec, picture1, response3, education, target_size, languages, sex, RT, correct3, context, trial_number, startTime, attempts, question3, fairprice, question2, response2, adj_cond, trial_name, utterance ) %>% write_csv('../data/results_24_ref-utility-5-6-prenom_cleaned.csv')
df.prenom <- read_csv('../data/results_23_ref-utility-5-6-pred.csv')
df.prenom %>% select(submission_id, question, response1, sentence_left, startDate, context_picture, experiment_id, picture2, correct1, question1, problems, enjoyment, item, botresponse, correct2, pic_spec, understand, text, condition, target, age, response, comments, ref_spec, picture1, response3, education, target_size, languages, sex, RT, correct3, context, trial_number, startTime, attempts, question3, fairprice, question2, response2, adj_cond, trial_name, utterance ) %>% write_csv('../data/results_23_ref-utility-5-6-pred_cleaned.csv')
